# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 16
      uses: actions/setup-java@v3
      with:
        java-version: '16'
        distribution: 'microsoft'
        cache: maven
    - name: Build with Maven
      run: mvn -B install --file Extrassentials/pom.xml
    - name: 'Publish JAR'
      uses: actions/upload-artifact@v2-preview
      with:
        name: â€˜Extrassentials'
        path: /home/runner/work/Extrassentials/Extrassentials/Extrassentials/target/Extrassentials-*.jar
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: LATEST
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /home/runner/work/Extrassentials/Extrassentials/Extrassentials/target/Extrassentials-*.jar
          asset_name: Extrassentials.jar
          asset_content_type: application/jar
